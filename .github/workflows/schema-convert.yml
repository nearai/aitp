name: Convert JSON Schema to TypeScript

on:
  push:
    branches:
      - '*'  # Run on every branch push

jobs:
  convert-schema:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Required for pushing commits

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install json-schema-to-typescript CLI
        run: npm install -g json-schema-to-typescript@15.0.4

      - name: Convert JSON schemas to TypeScript
        run: |
          echo "Finding JSON schema files..."
          files=$(find . -type f \( -name "schema.json" -o -name "*.schema.json" \))
          if [ -z "$files" ]; then
            echo "No JSON schema files found."
          else
            for file in $files; do
              echo "Processing $file"
              # Compute the output file by replacing .json with .ts (e.g. foo.schema.json -> foo.schema.ts)
              outfile="${file%.json}.ts"
              echo "Generating $outfile"
              # The banner now includes the filename of the source JSON schema
              json2ts "$file" --bannerComment "/* Autogenerated by GitHub Action from schema file: $file. DO NOT MODIFY. */" > "$outfile"
            done
          fi

      - name: Remove orphaned TypeScript schema files
        run: |
          echo "Checking for orphaned TypeScript schema files..."
          ts_files=$(find . -type f \( -name "schema.ts" -o -name "*.schema.ts" \))
          for tsfile in $ts_files; do
            # Get corresponding JSON file name (e.g. foo.schema.ts -> foo.schema.json)
            jsonfile="${tsfile%.ts}.json"
            if [ ! -f "$jsonfile" ]; then
              echo "Removing orphaned file $tsfile (no corresponding $jsonfile)"
              rm "$tsfile"
            fi
          done

      - name: Check for changes
        id: changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push Changes
        if: steps.changes.outputs.changed == 'true'
        run: |
          git add .
          git commit -m "chore: update autogenerated schema types [skip ci]"
          git push
